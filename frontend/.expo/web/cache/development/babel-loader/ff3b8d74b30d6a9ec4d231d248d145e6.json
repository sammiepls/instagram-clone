{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { USER_STATE_CHANGE } from \"../constants\";\nexport function fetchUser() {\n  return function _callee(dispatch) {\n    var uid;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().currentUser.uid);\n\n          case 2:\n            uid = _context.sent;\n            firebase.firestore().collection(\"user\").doc(uid).get().then(function (snapshot) {\n              snapshot.exists ? dispatch({\n                type: USER_STATE_CHANGE,\n                currentUser: snapshot.data\n              }) : console.log(\"does not exist\");\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n}","map":{"version":3,"sources":["/Users/sammiepls/Code/Study/instagram/redux/actions/index.js"],"names":["firebase","USER_STATE_CHANGE","fetchUser","dispatch","auth","currentUser","uid","firestore","collection","doc","get","then","snapshot","exists","type","data","console","log"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,SAASC,iBAAT;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1B,SAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACaH,QAAQ,CAACI,IAAT,GAAgBC,WAAhB,CAA4BC,GADzC;;AAAA;AACCA,YAAAA,GADD;AAELN,YAAAA,QAAQ,CACLO,SADH,GAEGC,UAFH,CAEc,MAFd,EAGGC,GAHH,CAGOH,GAHP,EAIGI,GAJH,GAKGC,IALH,CAKQ,UAACC,QAAD,EAAc;AAClBA,cAAAA,QAAQ,CAACC,MAAT,GAAkBV,QAAQ,CAAC;AAAEW,gBAAAA,IAAI,EAAEb,iBAAR;AAA2BI,gBAAAA,WAAW,EAAEO,QAAQ,CAACG;AAAjD,eAAD,CAA1B,GAAsFC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAtF;AACD,aAPH;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAWD","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { USER_STATE_CHANGE } from \"../constants\";\n\nexport function fetchUser() {\n  return async (dispatch) => {\n    const uid = await firebase.auth().currentUser.uid;\n    firebase\n      .firestore()\n      .collection(\"user\")\n      .doc(uid)\n      .get()\n      .then((snapshot) => {\n        snapshot.exists ? dispatch({ type: USER_STATE_CHANGE, currentUser: snapshot.data }) : console.log(\"does not exist\");\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}